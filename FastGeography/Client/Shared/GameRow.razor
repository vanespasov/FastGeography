@using FastGeography.Shared;

<tr>
    <td class="table-light"><input @bind-value=@game.Letter disabled="true" style="width:35px;" /></td>
    <td class="@(game.SetCssClass(game.City.Points))">
        <input disabled=@game.IsFinished @bind-value=@game.City.Answer />
        @if (game.City.MapsUri != null)
        {
            <a href="@game.City.MapsUri" target="_blank">
                <img src="images/visit.png" alt="Go to location" style="width:42px;height:42px;">
            </a>
        }
    </td>
    <td class="@(game.SetCssClass(game.Village.Points))">
        <input disabled=@game.IsFinished @bind-value=@game.Village.Answer />
        @if (game.Village.MapsUri != null)
        {
            <a href="@game.Village.MapsUri" target="_blank">
                <img src="images/visit.png" alt="Go to location" style="width:42px;height:42px;">
            </a>
        }
    </td>
    <td class="@(game.SetCssClass(game.State.Points))">
        <input disabled=@game.IsFinished @bind-value=@game.State.Answer />
        @if (game.State.MapsUri != null)
        {
            <a href="@game.State.MapsUri" target="_blank">
                <img src="images/visit.png" alt="Go to location" style="width:42px;height:42px;">
            </a>
        }
    </td>
    <td class="@(game.SetCssClass(game.River.Points))">
        <input disabled=@game.IsFinished @bind-value=@game.River.Answer />
        @if (game.River.MapsUri != null)
        {
            <a href="@game.River.MapsUri" target="_blank">
                <img src="images/visit.png" alt="Go to location" style="width:42px;height:42px;">
            </a>
        }
    </td>
    <td class="@(game.SetCssClass(game.Mountain.Points))">
        <input disabled=@game.IsFinished @bind-value=@game.Mountain.Answer />
        @if (game.Mountain.MapsUri != null)
        {
            <a href="@game.Mountain.MapsUri" target="_blank">
                <img src="images/visit.png" alt="Go to location" style="width:42px;height:42px;">
            </a>
        }
    </td>
    <td class="table-light">@game.SecondsPlayed</td>
    <td class="table-light"><button @onclick="HandleClick" disabled=@game.IsFinished class="btn btn-primary">Check</button></td>
</tr>

@code {
    [Parameter] public EventCallback<Game> OnClick { get; set; }
    [Parameter] public Guid Id { get; set; }
    [Parameter] public DateTime DatePlayed { get; set; }
    [Parameter] public char Letter { get; set; }
    [Parameter] public GameLocation? City { get; set; }
    [Parameter] public GameLocation? Village { get; set; }
    [Parameter] public GameLocation? State { get; set; }
    [Parameter] public GameLocation? Mountain { get; set; }
    [Parameter] public GameLocation? River { get; set; }
    [Parameter] public bool IsFinished { get; set; }
    [Parameter] public int SecondsPlayed { get; set; }

    Game game = new Game();

    async Task HandleClick()
    {
        await OnClick.InvokeAsync(game);
    }

    protected override void OnParametersSet()
    {
        game = new Game
            {
                Id = Id,
                DatePlayed = DatePlayed,
                Letter = Letter,
                City = City,
                Village = Village,
                State = State,
                Mountain = Mountain,
                River = River,
                IsFinished = IsFinished,
                SecondsPlayed = SecondsPlayed
            };
    }
}